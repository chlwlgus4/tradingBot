{"remainingRequest":"/Users/choijihyeon/IdeaProjects/trade_bot/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/choijihyeon/IdeaProjects/trade_bot/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/choijihyeon/IdeaProjects/trade_bot/src/App.vue","mtime":1633525733266},{"path":"/Users/choijihyeon/IdeaProjects/trade_bot/node_modules/cache-loader/dist/cjs.js","mtime":1633448507444},{"path":"/Users/choijihyeon/IdeaProjects/trade_bot/node_modules/babel-loader/lib/index.js","mtime":1631533208843},{"path":"/Users/choijihyeon/IdeaProjects/trade_bot/node_modules/cache-loader/dist/cjs.js","mtime":1633448507444},{"path":"/Users/choijihyeon/IdeaProjects/trade_bot/node_modules/vue-loader/lib/index.js","mtime":1633448521452}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTdG9tcCBmcm9tICd3ZWJzdG9tcC1jbGllbnQnCmltcG9ydCBTb2NrSlMgZnJvbSAnc29ja2pzLWNsaWVudCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlck5hbWU6ICIiLAogICAgICBtZXNzYWdlOiAiIiwKICAgICAgcmVjdkxpc3Q6IFtdCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5jb25uZWN0KCk7CiAgfSwKICBjb21wb25lbnRzOiB7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kTWVzc2FnZShlKSB7CiAgICAgIGlmIChlLmtleUNvZGUgPT09IDEzICYmIHRoaXMudXNlck5hbWUgJiYgdGhpcy5tZXNzYWdlKSB7CiAgICAgICAgdGhpcy5zZW5kKCk7CiAgICAgICAgdGhpcy5tZXNzYWdlID0gJyc7CiAgICAgIH0KICAgIH0sCiAgICBzZW5kKCkgewogICAgICBjb25zb2xlLmxvZyhgU2VuZCBtZXNzYWdlIDogJHt0aGlzLm1lc3NhZ2V9YCk7CiAgICAgIGlmICh0aGlzLnN0b21wQ2xpZW50ICYmIHRoaXMuc3RvbXBDbGllbnQuY29ubmVjdGVkKSB7CiAgICAgICAgY29uc3QgbXNnID0gewogICAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsCiAgICAgICAgICBjb250ZW50OiB0aGlzLm1lc3NhZ2UsCiAgICAgICAgfTsKICAgICAgICB0aGlzLnN0b21wQ2xpZW50LnNlbmQoIi9yZWNlaXZlIiwgSlNPTi5zdHJpbmdpZnkobXNnKSk7CiAgICAgIH0KICAgIH0sCiAgICBjb25uZWN0KCkgewogICAgICBjb25zdCBzZXJ2ZXJVUkwgPSAiaHR0cDovL2xvY2FsaG9zdDo4MDgwIgogICAgICBsZXQgc29ja2V0ID0gbmV3IFNvY2tKUyhzZXJ2ZXJVUkwpOwogICAgICB0aGlzLnN0b21wQ2xpZW50ID0gU3RvbXAub3Zlcihzb2NrZXQpOwogICAgICBjb25zb2xlLmxvZyhg7IaM7LyTIOyXsOqysOydhCDsi5zrj4Ttlanri4jri6QuIOyEnOuyhCDso7zshow6ICR7c2VydmVyVVJMfWApCgogICAgICB0aGlzLnN0b21wQ2xpZW50LmNvbm5lY3Qoe30sIGZyYW1lID0+IHsKICAgICAgICAvL+yGjOy8kyDsl7DqsrAg7ISx6rO1CiAgICAgICAgY29uc29sZS5sb2coJ+yGjOy8kyDsl7DqsrAg7ISx6rO1JywgZnJhbWUpOwogICAgICAgIHRoaXMuc3RvbXBDbGllbnQuc3Vic2NyaWJlKCIvc2VuZCIsIHJlcyA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZygn6rWs64+F7Jy866GcIOuwm+ydgCDrqZTsi5zsp4AnLCByZXMuYm9keSk7CgogICAgICAgICAgdGhpcy5yZWN2TGlzdC5wdXNoKEpTT04ucGFyc2UocmVzLmJvZHkpKTsKICAgICAgICB9KQogICAgICB9LCBlcnJvciA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ+yGjOy8kyDsl7DqsrAg7Iuk7YyoJywgZXJyb3IpOwogICAgICAgIHRoaXMuY29ubmVjdGVkID0gZmFsc2U7CiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    유저이름:\n    <input v-model=\"userName\" type=\"text\">내용: <input v-model=\"message\" type=\"text\" @keyup=\"sendMessage\">\n    <div v-for=\"(item, idx) in recvList\" :key=\"idx\">\n      <h3>유저이름: {{ item.userName }}</h3>\n      <h3>내용: {{ item.content }}</h3>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Stomp from 'webstomp-client'\nimport SockJS from 'sockjs-client'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      userName: \"\",\n      message: \"\",\n      recvList: []\n    }\n  },\n  created() {\n    this.connect();\n  },\n  components: {\n  },\n  methods: {\n    sendMessage(e) {\n      if (e.keyCode === 13 && this.userName && this.message) {\n        this.send();\n        this.message = '';\n      }\n    },\n    send() {\n      console.log(`Send message : ${this.message}`);\n      if (this.stompClient && this.stompClient.connected) {\n        const msg = {\n          username: this.username,\n          content: this.message,\n        };\n        this.stompClient.send(\"/receive\", JSON.stringify(msg));\n      }\n    },\n    connect() {\n      const serverURL = \"http://localhost:8080\"\n      let socket = new SockJS(serverURL);\n      this.stompClient = Stomp.over(socket);\n      console.log(`소켓 연결을 시도합니다. 서버 주소: ${serverURL}`)\n\n      this.stompClient.connect({}, frame => {\n        //소켓 연결 성공\n        console.log('소켓 연결 성공', frame);\n        this.stompClient.subscribe(\"/send\", res => {\n          console.log('구독으로 받은 메시지', res.body);\n\n          this.recvList.push(JSON.parse(res.body));\n        })\n      }, error => {\n        console.log('소켓 연결 실패', error);\n        this.connected = false;\n      })\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}